<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>mojolicious.io</title>
        <link>http://mojolicious.io/blog/</link>
        <atom:link href="http://mojolicious.io/blog/index.rss" rel="self" type="application/rss+xml" />
        <description>Blog feed of mojolicious.io</description>
        <generator>Statocles 0.087</generator>
        <item>
            <title>Day 3: Using Named Routes</title>
            <link>http://mojolicious.io/blog/2017/12/03/day-3-using-named-routes/</link>
            <guid>http://mojolicious.io/blog/2017/12/03/day-3-using-named-routes/</guid>
            <description><![CDATA[
                <p>One of the things we know from years of programming is that you should never hard-code anything if you don&#39;t have to.
And yet far too many web application hard-code their urls, especially internal ones.
But what if you didn&#39;t have to?</p>

<p>Each Mojolicious route has its own <a href="http://mojolicious.org/perldoc/Mojolicious/Guides/Routing#Named-routes">name</a> which can be used to generate urls.
If you don&#39;t specify one, one is generated, but you shouldn&#39;t rely on that name, give it one that is meaningful and relevant to your purposes.
In lite apps, the name is the last parameter, after any defaults or callbacks.
(In a full app it is an attribute, but we&#39;ll talk about those in another post).</p>

<p>Then when you need a url, rather than hard-coding it, use <a href="http://mojolicious.org/perldoc/Mojolicious/Controller#url_for"><code>url_for</code></a> or related functionality to generate a url by name, you can even pass placeholder values if needed.
Let&#39;s see how it works!</p>

                    <p><a href="http://mojolicious.io/blog/2017/12/03/day-3-using-named-routes/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="http://mojolicious.io/blog/tag/advent/">advent</a>
                        <a href="http://mojolicious.io/blog/tag/lite/">lite</a>
                        <a href="http://mojolicious.io/blog/tag/routing/">routing</a>
                    </p>

            ]]></description>
            <pubDate>
                Sun, 03 Dec 2017 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Day 2: The Stash</title>
            <link>http://mojolicious.io/blog/2017/12/02/day-2-the-stash/</link>
            <guid>http://mojolicious.io/blog/2017/12/02/day-2-the-stash/</guid>
            <description><![CDATA[
                <p>In Mojolicious, when processing a request and preparing a response one of the most important concepts is &quot;the stash&quot;.
Since it is a non-blocking framework, your code can&#39;t use global variables to store any state during processing.
If you did and some other code were to run, it could very easily get cross-talk between requests.</p>

<p>The stash is the place you can store information while you process it.
It is just a simple hash reference that is attached to the controller object that is processing the request.
It lives and dies with that one transaction.</p>

<p>While you can and should use it as a scratchpad, it really is much more.
The stash controls almost every aspect of the response that you generate.
Let&#39;s look a little closer to see how it works</p>

                    <p><a href="http://mojolicious.io/blog/2017/12/02/day-2-the-stash/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="http://mojolicious.io/blog/tag/advent/">advent</a>
                        <a href="http://mojolicious.io/blog/tag/hello-world/">hello world</a>
                        <a href="http://mojolicious.io/blog/tag/lite/">lite</a>
                        <a href="http://mojolicious.io/blog/tag/rendering/">rendering</a>
                    </p>

            ]]></description>
            <pubDate>
                Sat, 02 Dec 2017 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Day 1: Getting Started</title>
            <link>http://mojolicious.io/blog/2017/12/01/day-1-getting-started/</link>
            <guid>http://mojolicious.io/blog/2017/12/01/day-1-getting-started/</guid>
            <description><![CDATA[
                <h2>Start at the Beginning</h2>

<p>In this Advent Calendar series, some posts will be introductory, some will be advanced, some will be on new features.
Who knows what could be next?
But for now let&#39;s ensure a level playing field by working out how to get started.</p>

                    <p><a href="http://mojolicious.io/blog/2017/12/01/day-1-getting-started/#section-2">Continue reading...</a></p>

                    <p>Tags:
                        <a href="http://mojolicious.io/blog/tag/advent/">advent</a>
                        <a href="http://mojolicious.io/blog/tag/installing/">installing</a>
                        <a href="http://mojolicious.io/blog/tag/hello-world/">hello world</a>
                        <a href="http://mojolicious.io/blog/tag/lite/">lite</a>
                    </p>

            ]]></description>
            <pubDate>
                Fri, 01 Dec 2017 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Mojolicious Advent 2017</title>
            <link>http://mojolicious.io/blog/2017/11/30/mojolicious-advent-2017/</link>
            <guid>http://mojolicious.io/blog/2017/11/30/mojolicious-advent-2017/</guid>
            <description><![CDATA[
                <p>I&#39;m happy to announce that I&#39;ll be running a Mojolicious Advent Calendar this year!</p>

<p>For those of you who are unaware, an advent calendar is a way to count down to Christmas through December.
In many cases, the act of marking each day also provides a treat, usually chocolate.
All told, 24 days are marked, one for each day from Dec 1 to Dec 24, Christmas Eve.</p>

<p>I&#39;m not sure exactly how this moved into coding circles, but there is now a tradition of doing a similar countdown for programmers.
The treats are little bits of wisdom on some programming topic.</p>

<p>Perl has <a href="http://www.perladvent.org/">http://www.perladvent.org/</a> which has run for quite a long time.
Other calendars have popped up for other languages and I&#39;m told it is even migrating to non-coding maker-type spaces!</p>

<p>This year I&#39;ve decided that I&#39;d like there to be one for the <a href="http://mojolicious.org">Mojolicious Web Framework</a>.
My desire is partly to put out some common starting tips and tricks and partly due to some recent additions that could really do with some extra publicity (they&#39;re cool, just wait!).</p>

<p>At least at the moment it is just me so, in the hopes of actually completing it, some posts might be brief.
Some calendars try to use holiday themes in the posts, which I may do it the muse is upon me, but I make no promises.</p>

<p>I hope you&#39;ll enjoy no matter what religious or non-religious winter holidays you celebrate!</p>


                    <p>Tags:
                        <a href="http://mojolicious.io/blog/tag/advent/">advent</a>
                    </p>

            ]]></description>
            <pubDate>
                Thu, 30 Nov 2017 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Introduction</title>
            <link>http://mojolicious.io/blog/2017/11/30/introduction/</link>
            <guid>http://mojolicious.io/blog/2017/11/30/introduction/</guid>
            <description><![CDATA[
                <p>Hello and welcome to the new site!</p>

<p>My name is Joel Berger.
I&#39;m on the Core Development team of the Mojolicious web framework.</p>

<p>I guess the immediate question is, why start a new site and blog?
This site grew out of ideas I have had to promote the framework, especially outside of the Perl bubble.</p>

<p>The immediate goal is to publish an Advent Calendar focused on Mojolicious.
It is a fun tradition and an interesting challenge, blogging once a day for almost a month.
The question was where to put it.</p>

                    <p><a href="http://mojolicious.io/blog/2017/11/30/introduction/#section-2">Continue reading...</a></p>


            ]]></description>
            <pubDate>
                Thu, 30 Nov 2017 00:00:00 +0000
            </pubDate>
        </item>
    </channel>
</rss>

